/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/GuiController.js":
/*!*****************************!*\
  !*** ./js/GuiController.js ***!
  \*****************************/
/*! exports provided: GuiController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuiController\", function() { return GuiController; });\n/* harmony import */ var _libs_es6_Stats_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./libs_es6/Stats.js */ \"./js/libs_es6/Stats.js\");\n// import THREE from './libs_es6/three.js';\r\n\r\n///////////////\r\n//////////////\r\nvar GuiController = function() {\r\n\tthis.init = function(sceneController) {\r\n\t\tthis.initStats();\r\n\t\tthis.initGui(sceneController);\r\n\t};\r\n\r\n\tthis.initGui = function(sceneController) {\r\n\t\tvar params = {\r\n\t\t\texposure: 1,\r\n\t\t\tbloomThreshold: 0,\r\n\t\t\tbloomStrength: 3,\r\n\t\t\tbloomRadius: 0.1,\r\n            alphaThreshold: 0.1,\r\n            debugscale: 0.1,\r\n\t\t};\r\n\t\tthis.gui = new dat.GUI();\r\n\r\n\t\t// this.gui.add(params, 'exposure', 0.1, 2).onChange(function (value) {\r\n\t\t//     sceneController.renderer.toneMappingExposure = Math.pow(value, 4.0);\r\n\t\t// });\r\n\t\t// this.gui.add(params, 'bloomThreshold', 0.0, 1.0).onChange(function(value) {\r\n\t\t// \tsceneController.bloomPass.threshold = Number(value);\r\n\t\t// });\r\n\t\t// this.gui.add(params, 'bloomStrength', 0.0, 3.0).onChange(function(value) {\r\n\t\t// \tsceneController.bloomPass.strength = Number(value);\r\n\t\t// });\r\n\t\t// this.gui\r\n\t\t// \t.add(params, 'bloomRadius', 0.0, 1.0)\r\n\t\t// \t.step(0.01)\r\n\t\t// \t.onChange(function(value) {\r\n\t\t// \t\tsceneController.bloomPass.radius = Number(value);\r\n\t\t// \t});\r\n\r\n\t};\r\n\r\n\tthis.initStats = function() {\r\n\t\tthis.stats = new _libs_es6_Stats_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n\t\tdocument.body.appendChild(this.stats.dom);\r\n\t};\r\n\tthis.update = function() {\r\n\t\tthis.stats.begin();\r\n\t\tthis.stats.end();\r\n\t};\r\n};\r\n\r\n\n\n//# sourceURL=webpack:///./js/GuiController.js?");

/***/ }),

/***/ "./js/SceneController.js":
/*!*******************************!*\
  !*** ./js/SceneController.js ***!
  \*******************************/
/*! exports provided: SceneController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SceneController\", function() { return SceneController; });\n/* harmony import */ var _libs_es6_THREE_OrbitControls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./libs_es6/THREE.OrbitControls.js */ \"./js/libs_es6/THREE.OrbitControls.js\");\n/* harmony import */ var _postprocessing_es6_RenderPass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./postprocessing_es6/RenderPass.js */ \"./js/postprocessing_es6/RenderPass.js\");\n/* harmony import */ var _postprocessing_es6_EffectComposer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./postprocessing_es6/EffectComposer.js */ \"./js/postprocessing_es6/EffectComposer.js\");\n// import THREE from './libs_es6/three.js';\r\n\r\n\r\n\r\n\r\nfunction SceneController() {\r\n\tthis.init = function() {\r\n\t\tthis.threeSetup();\r\n\t\tthis.addCube();\r\n\t\tthis.addLight();\r\n\t\tthis.addControls();\r\n\t\tthis.addHelper();\r\n\r\n\t\tthis.postProcessingSetup();\r\n\t};\r\n\tthis.threeSetup = function() {\r\n\t\tthis.clock = new THREE.Clock();\r\n\t\t// scene\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\t// this.scene.background = new THREE.Color(0x000000);\r\n\t\t// renderer\r\n\t\tthis.canvas = document.getElementById('target_canvas');\r\n\t\tthis.renderer = new THREE.WebGLRenderer({\r\n\t\t\tcanvas: this.canvas,\r\n\t\t\talpha: true,\r\n\t\t});\r\n\t\tthis.renderer.setSize(window.innerWidth * 2, window.innerHeight * 2);\r\n\r\n\t\t// camera\r\n\t\tthis.camera = new THREE.PerspectiveCamera(72, window.innerWidth / window.innerHeight, 1, 10000);\r\n\r\n\t\t// this.camera = new THREE.PerspectiveCamera(36, window.innerWidth / window.innerHeight, 1, 10000);\r\n\t\t// this.cameraRadius = 6.27;\r\n\t\t// this.cameraHeight = 1.24;\r\n\t\t// this.cameraTarget = new THREE.Vector3(0, this.cameraHeight - 0.16, 0);\r\n\r\n\t\t// how this work?????\r\n\t\tthis.cameraRadius = 3.2;\r\n\t\tthis.cameraHeight = 1.28;\r\n\t\tthis.camera.position.set(0, this.cameraHeight, this.cameraRadius);\r\n\t\t// console.log(this.scene.position);\r\n\r\n\t\tthis.cameraTarget = new THREE.Vector3(0, this.cameraHeight - 0.026, 0);\r\n\t\tthis.camera.lookAt(this.cameraTarget);\r\n\t};\r\n\r\n\tthis.postProcessingSetup = function() {\r\n\t\tthis.renderPass = new _postprocessing_es6_RenderPass_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, this.camera);\r\n\r\n\t\tvar width = window.innerWidth || 1;\r\n\t\tvar height = window.innerHeight || 1;\r\n\t\tvar parameters = {\r\n\t\t\tminFilter: THREE.LinearFilter,\r\n\t\t\tmagFilter: THREE.LinearFilter,\r\n\t\t\tformat: THREE.RGBAFormat,\r\n\t\t\tstencilBuffer: false,\r\n\t\t};\r\n\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTarget(width, height, parameters);\r\n\t\tthis.renderPass.renderToScreen = true;\r\n\r\n\t\tthis.composer = new _postprocessing_es6_EffectComposer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.renderer, this.renderTarget);\r\n\t\tthis.composer.setSize(window.innerWidth, window.innerHeight);\r\n\t\tthis.composer.addPass(this.renderPass);\r\n\t};\r\n\r\n\tthis.addControls = function() {\r\n\t\t// controls\r\n\t\tthis.controls = new _libs_es6_THREE_OrbitControls_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.camera);\r\n\t};\r\n\r\n\tthis.addHelper = function() {\r\n\t\tthis.axesHelper = new THREE.AxesHelper(10);\r\n\t\tthis.scene.add(this.axesHelper);\r\n\t\tthis.gridHelper = new THREE.GridHelper(10, 10);\r\n\t\tthis.scene.add(this.gridHelper);\r\n\t};\r\n\tthis.addLight = function() {\r\n\t\t// light\r\n\t\tvar light1 = new THREE.DirectionalLight(0xffffff, 1);\r\n\t\tlight1.position.set(1, 1, 1);\r\n\t\tthis.scene.add(light1);\r\n\r\n\t\tvar light2 = new THREE.DirectionalLight(0xffffff, 0.4);\r\n\t\tlight2.position.set(-1, -1, 1);\r\n\t\tthis.scene.add(light2);\r\n\t\tthis.scene.add(new THREE.AmbientLight(0x666666));\r\n\t};\r\n\r\n\tthis.addCube = function() {\r\n\t\tvar geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\t\tvar material = new THREE.MeshStandardMaterial({ color: 0x00ff00 });\r\n\t\tvar cube = new THREE.Mesh(geometry, material);\r\n\t\tthis.scene.add(cube);\r\n\t};\r\n\r\n\tthis.update = function(nowTime) {\r\n\t\tconst loopDuration = 16;\r\n\t\tconst tmpVector = new THREE.Vector3();\r\n\t\tconst tmpMat = new THREE.Matrix4();\r\n\r\n\t\tconst time = nowTime % loopDuration;\r\n\t\tconst t = time / loopDuration;\r\n\t};\r\n\r\n\tthis.render = function(flag) {\r\n\t\t// console.log(performance.now());\r\n\t\tthis.update(performance.now() * 0.001);\r\n\r\n\t\tflag ? this.renderer.render(this.scene, this.camera) : this.composer.render();\r\n\t};\r\n\r\n\tthis.resize = function(width, height) {\r\n\t\t// camera\r\n\t\tthis.camera.aspect = width / height;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t// render\r\n\t\tthis.renderer.setSize(width, height);\r\n\t\tvar pixelRatio = this.renderer.getPixelRatio();\r\n\t\tvar newWidth = Math.floor(width / pixelRatio) || 1;\r\n\t\tvar newHeight = Math.floor(height / pixelRatio) || 1;\r\n\t\tif (this.composer) {\r\n\t\t\tthis.composer.setSize(width, height);\r\n\t\t}\r\n\t};\r\n}\r\n\n\n//# sourceURL=webpack:///./js/SceneController.js?");

/***/ }),

/***/ "./js/libs_es6/Stats.js":
/*!******************************!*\
  !*** ./js/libs_es6/Stats.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Stats; });\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\n\n\n\n//# sourceURL=webpack:///./js/libs_es6/Stats.js?");

/***/ }),

/***/ "./js/libs_es6/THREE.OrbitControls.js":
/*!********************************************!*\
  !*** ./js/libs_es6/THREE.OrbitControls.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// import THREE from './three.js';\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/metaKey, or arrow keys / touch: two-finger move\n\nconst OrbitControls = function(object, domElement) {\n\n  this.object = object;\n\n  this.domElement = (domElement !== undefined) ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new THREE.Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function() {\n\n    return spherical.phi;\n\n  };\n\n  this.getAzimuthalAngle = function() {\n\n    return spherical.theta;\n\n  };\n\n  this.saveState = function() {\n\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n\n  };\n\n  this.reset = function() {\n\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function() {\n\n    var offset = new THREE.Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n\n    return function update() {\n\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n\n        rotateLeft(getAutoRotationAngle());\n\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi;\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n      spherical.makeSafe();\n\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n      // move target to panned location\n      scope.target.add(panOffset);\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n\n        sphericalDelta.theta *= (1 - scope.dampingFactor);\n        sphericalDelta.phi *= (1 - scope.dampingFactor);\n\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n\n      } else {\n\n        sphericalDelta.set(0, 0, 0);\n\n        panOffset.set(0, 0, 0);\n\n      }\n\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged ||\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n\n      }\n\n      return false;\n\n    };\n\n  }();\n\n  this.dispose = function() {\n\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    window.removeEventListener('keydown', onKeyDown, false);\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start' };\n  var endEvent = { type: 'end' };\n\n  var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n  }\n\n  function getZoomScale() {\n\n    return Math.pow(0.95, scope.zoomSpeed);\n\n  }\n\n  function rotateLeft(angle) {\n\n    sphericalDelta.theta -= angle;\n\n  }\n\n  function rotateUp(angle) {\n\n    sphericalDelta.phi -= angle;\n\n  }\n\n  var panLeft = function() {\n\n    var v = new THREE.Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n\n      panOffset.add(v);\n\n    };\n\n  }();\n\n  var panUp = function() {\n\n    var v = new THREE.Vector3();\n\n    return function panUp(distance, objectMatrix) {\n\n      if (scope.screenSpacePanning === true) {\n\n        v.setFromMatrixColumn(objectMatrix, 1);\n\n      } else {\n\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n\n      }\n\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n\n    };\n\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function() {\n\n    var offset = new THREE.Vector3();\n\n    return function pan(deltaX, deltaY) {\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n\n      } else if (scope.object.isOrthographicCamera) {\n\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n\n      } else {\n\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n\n      }\n\n    };\n\n  }();\n\n  function dollyIn(dollyScale) {\n\n    if (scope.object.isPerspectiveCamera) {\n\n      scale /= dollyScale;\n\n    } else if (scope.object.isOrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  function dollyOut(dollyScale) {\n\n    if (scope.object.isPerspectiveCamera) {\n\n      scale *= dollyScale;\n\n    } else if (scope.object.isOrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n\n    //console.log( 'handleMouseDownRotate' );\n\n    rotateStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseDownDolly(event) {\n\n    //console.log( 'handleMouseDownDolly' );\n\n    dollyStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseDownPan(event) {\n\n    //console.log( 'handleMouseDownPan' );\n\n    panStart.set(event.clientX, event.clientY);\n\n  }\n\n  function handleMouseMoveRotate(event) {\n\n    //console.log( 'handleMouseMoveRotate' );\n\n    rotateEnd.set(event.clientX, event.clientY);\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseMoveDolly(event) {\n\n    //console.log( 'handleMouseMoveDolly' );\n\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n\n      dollyIn(getZoomScale());\n\n    } else if (dollyDelta.y < 0) {\n\n      dollyOut(getZoomScale());\n\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseMovePan(event) {\n\n    //console.log( 'handleMouseMovePan' );\n\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n\n  }\n\n  function handleMouseUp(event) {\n\n    // console.log( 'handleMouseUp' );\n\n  }\n\n  function handleMouseWheel(event) {\n\n    // console.log( 'handleMouseWheel' );\n\n    if (event.deltaY < 0) {\n\n      dollyOut(getZoomScale());\n\n    } else if (event.deltaY > 0) {\n\n      dollyIn(getZoomScale());\n\n    }\n\n    scope.update();\n\n  }\n\n  function handleKeyDown(event) {\n\n    //console.log( 'handleKeyDown' );\n\n    switch (event.keyCode) {\n\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n    }\n\n  }\n\n  function handleTouchStartRotate(event) {\n\n    //console.log( 'handleTouchStartRotate' );\n\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n  }\n\n  function handleTouchStartDollyPan(event) {\n\n    //console.log( 'handleTouchStartDollyPan' );\n\n    if (scope.enableZoom) {\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n\n    }\n\n    if (scope.enablePan) {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panStart.set(x, y);\n\n    }\n\n  }\n\n  function handleTouchMoveRotate(event) {\n\n    //console.log( 'handleTouchMoveRotate' );\n\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n\n  }\n\n  function handleTouchMoveDollyPan(event) {\n\n    //console.log( 'handleTouchMoveDollyPan' );\n\n    if (scope.enableZoom) {\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n      dollyIn(dollyDelta.y);\n\n      dollyStart.copy(dollyEnd);\n\n    }\n\n    if (scope.enablePan) {\n\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panEnd.set(x, y);\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n    }\n\n    scope.update();\n\n  }\n\n  function handleTouchEnd(event) {\n\n    //console.log( 'handleTouchEnd' );\n\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (event.button) {\n\n      case scope.mouseButtons.LEFT:\n\n        if (event.ctrlKey || event.metaKey) {\n\n          if (scope.enablePan === false) return;\n\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n\n        } else {\n\n          if (scope.enableRotate === false) return;\n\n          handleMouseDownRotate(event);\n\n          state = STATE.ROTATE;\n\n        }\n\n        break;\n\n      case scope.mouseButtons.MIDDLE:\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n\n        break;\n\n      case scope.mouseButtons.RIGHT:\n\n        if (scope.enablePan === false) return;\n\n        handleMouseDownPan(event);\n\n        state = STATE.PAN;\n\n        break;\n\n    }\n\n    if (state !== STATE.NONE) {\n\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n\n      scope.dispatchEvent(startEvent);\n\n    }\n\n  }\n\n  function onMouseMove(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (state) {\n\n      case STATE.ROTATE:\n\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n\n        break;\n\n      case STATE.DOLLY:\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n\n        break;\n\n      case STATE.PAN:\n\n        if (scope.enablePan === false) return;\n\n        handleMouseMovePan(event);\n\n        break;\n\n    }\n\n  }\n\n  function onMouseUp(event) {\n\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n\n  }\n\n  function onMouseWheel(event) {\n\n    if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    scope.dispatchEvent(startEvent);\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(endEvent);\n\n  }\n\n  function onKeyDown(event) {\n\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n    handleKeyDown(event);\n\n  }\n\n  function onTouchStart(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (event.touches.length) {\n\n      case 1: // one-fingered touch: rotate\n\n        if (scope.enableRotate === false) return;\n\n        handleTouchStartRotate(event);\n\n        state = STATE.TOUCH_ROTATE;\n\n        break;\n\n      case 2: // two-fingered touch: dolly-pan\n\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n\n        handleTouchStartDollyPan(event);\n\n        state = STATE.TOUCH_DOLLY_PAN;\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    if (state !== STATE.NONE) {\n\n      scope.dispatchEvent(startEvent);\n\n    }\n\n  }\n\n  function onTouchMove(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n\n      case 1: // one-fingered touch: rotate\n\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\n\n        handleTouchMoveRotate(event);\n\n        break;\n\n      case 2: // two-fingered touch: dolly-pan\n\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\n\n        handleTouchMoveDollyPan(event);\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n  }\n\n  function onTouchEnd(event) {\n\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n\n  }\n\n  function onContextMenu(event) {\n\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n  }\n\n  //\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n  window.addEventListener('keydown', onKeyDown, false);\n\n  // force an update at start\n\n  this.update();\n\n};\n\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties(OrbitControls.prototype, {\n\n  center: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .center has been renamed to .target');\n      return this.target;\n\n    }\n\n  },\n\n  // backward compatibility\n\n  noZoom: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n\n    }\n\n  },\n\n  noRotate: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      return !this.enableRotate;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      this.enableRotate = !value;\n\n    }\n\n  },\n\n  noPan: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      return !this.enablePan;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      this.enablePan = !value;\n\n    }\n\n  },\n\n  noKeys: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      return !this.enableKeys;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      this.enableKeys = !value;\n\n    }\n\n  },\n\n  staticMoving: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      return !this.enableDamping;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      this.enableDamping = !value;\n\n    }\n\n  },\n\n  dynamicDampingFactor: {\n\n    get: function() {\n\n      console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      return this.dampingFactor;\n\n    },\n\n    set: function(value) {\n\n      console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      this.dampingFactor = value;\n\n    }\n\n  }\n\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (OrbitControls);\n\n//# sourceURL=webpack:///./js/libs_es6/THREE.OrbitControls.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GuiController_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GuiController.js */ \"./js/GuiController.js\");\n/* harmony import */ var _SceneController_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SceneController.js */ \"./js/SceneController.js\");\n\r\n\r\n//////////////////\r\nvar sceneController, guiController;\r\n\r\n\r\nfunction init() {\r\n\tsceneController = new _SceneController_js__WEBPACK_IMPORTED_MODULE_1__[\"SceneController\"]();\r\n\tsceneController.init();\r\n\r\n\tguiController = new _GuiController_js__WEBPACK_IMPORTED_MODULE_0__[\"GuiController\"]();\r\n\tguiController.init(sceneController);\r\n\r\n\twindow.addEventListener('resize', onResize, false);\r\n}\r\n\r\nfunction render() {\r\n\trequestAnimationFrame(render);\r\n\r\n\tif (guiController) {\r\n\t\tguiController.update();\r\n\t}\r\n\t// stats.update();\r\n\tsceneController.render(1);\r\n\t\r\n}\r\n\r\ninit();\r\nrender();\r\n\r\nfunction onResize() {\r\n\tlet w = window.innerWidth;\r\n\tlet h = window.innerHeight;\r\n\tsceneController.resize(w * 2, h * 2);\r\n}\r\n\n\n//# sourceURL=webpack:///./js/main.js?");

/***/ }),

/***/ "./js/postprocessing_es6/EffectComposer.js":
/*!*************************************************!*\
  !*** ./js/postprocessing_es6/EffectComposer.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ShaderPass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ShaderPass.js */ \"./js/postprocessing_es6/ShaderPass.js\");\n/* harmony import */ var _shader_es6_CopyShader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shader_es6/CopyShader.js */ \"./js/shader_es6/CopyShader.js\");\n\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize();\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( _shader_es6_CopyShader_js__WEBPACK_IMPORTED_MODULE_1__[\"CopyShader\"] === undefined ) {\n\n\t\tconsole.error( 'EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( _ShaderPass_js__WEBPACK_IMPORTED_MODULE_0__[\"ShaderPass\"] === undefined ) {\n\n\t\tconsole.error( 'EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new _ShaderPass_js__WEBPACK_IMPORTED_MODULE_0__[\"ShaderPass\"]( _shader_es6_CopyShader_js__WEBPACK_IMPORTED_MODULE_1__[\"CopyShader\"] );\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize();\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getDrawingBufferSize();\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( size.width, size.height );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.renderTarget1.setSize( width, height );\n\t\tthis.renderTarget2.setSize( width, height );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( width, height );\n\n\t\t}\n\n\t}\n\n} );\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (EffectComposer);\n\n//# sourceURL=webpack:///./js/postprocessing_es6/EffectComposer.js?");

/***/ }),

/***/ "./js/postprocessing_es6/Pass.js":
/*!***************************************!*\
  !*** ./js/postprocessing_es6/Pass.js ***!
  \***************************************/
/*! exports provided: Pass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pass\", function() { return Pass; });\n\r\nvar Pass = function () {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen\r\n\tthis.renderToScreen = false;\r\n\r\n};\r\n\r\nObject.assign( Pass.prototype, {\r\n\r\n\tsetSize: function ( width, height ) {},\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\r\n\r\n\t\tconsole.error( 'Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\n\n//# sourceURL=webpack:///./js/postprocessing_es6/Pass.js?");

/***/ }),

/***/ "./js/postprocessing_es6/RenderPass.js":
/*!*********************************************!*\
  !*** ./js/postprocessing_es6/RenderPass.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Pass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pass.js */ \"./js/postprocessing_es6/Pass.js\");\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t_Pass_js__WEBPACK_IMPORTED_MODULE_0__[\"Pass\"].call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( _Pass_js__WEBPACK_IMPORTED_MODULE_0__[\"Pass\"].prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\t}\n\n} );\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderPass);\n\n//# sourceURL=webpack:///./js/postprocessing_es6/RenderPass.js?");

/***/ }),

/***/ "./js/postprocessing_es6/ShaderPass.js":
/*!*********************************************!*\
  !*** ./js/postprocessing_es6/ShaderPass.js ***!
  \*********************************************/
/*! exports provided: ShaderPass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShaderPass\", function() { return ShaderPass; });\n/* harmony import */ var _Pass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pass.js */ \"./js/postprocessing_es6/Pass.js\");\n// import THREE from '../libs_es6/three.js';\n\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\t_Pass_js__WEBPACK_IMPORTED_MODULE_0__[\"Pass\"].call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tthis.scene = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add( this.quad );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( _Pass_js__WEBPACK_IMPORTED_MODULE_0__[\"Pass\"].prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n//# sourceURL=webpack:///./js/postprocessing_es6/ShaderPass.js?");

/***/ }),

/***/ "./js/shader_es6/CopyShader.js":
/*!*************************************!*\
  !*** ./js/shader_es6/CopyShader.js ***!
  \*************************************/
/*! exports provided: CopyShader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CopyShader\", function() { return CopyShader; });\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\n\n//# sourceURL=webpack:///./js/shader_es6/CopyShader.js?");

/***/ })

/******/ });